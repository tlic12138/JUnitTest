1、hamcrest的常用方法
	逻辑：
		allOf - 如果所有匹配器都匹配才匹配，short circuits(短路与)
		anyOf - 如果任何匹配器匹配就匹配，short circuits(短路或)
		not - 如果包装的匹配器不匹配时匹配(非，!)
		
	对象：
		equalTo -测试对象相等使用Object.equals方法
		hasToString -测试Object.toString方法
		instanceOf,isCompatibleType -测试类型
		notNullValue, nullValue -测试null
		sameInstance -测试对象实例
		Beans
		hasProperty -测试JavaBeans属性
	
	集合：
		array -测试一个数组元素test an array's elements against an arrat of matchers
		hasEntry,hasKey,hasValue -测试一个Map包含一个实体、键或者值
		hasItem,hasItems -测试一个集合包含一个元素
		
	数字：
		closeTo -测试浮点值接近给定的值
		greaterThan,greaterThanOrEqualTo,lessThan,lessThanOrEqualTo -测试次序
		
	文本：
		equalToIgnoringCase -测试字符串相等忽略大小写
		equalToIgnoringWhiteSpace -测试字符串忽略空白
		containsString,endWith,startsWith -测试字符串匹配
		
2、hamcrest简介
	hamcrest可以有效增加junit的测试能力，用一些相对通俗的语言来进行测试
	要使用junit中的assertThat来进行断言
	第一个参数表示实际值，第二个参数表示hamcrest的表达式
	@Test
	public void testHamcrest() {
		// 首先需要静态导入import static org.hamcrest.Matchers.*;
		// 22是否大于20并小于40
		assertThat(22, allOf(greaterThan(20),lessThan(40)));
		// 判断字符串是否以字符串txt结尾
		assertThat("abc.txt", endsWith("txt"));
	}
	